package kr.or.ddit.buyer.service;

import java.io.File;
import java.io.IOException;

import javax.annotation.PostConstruct;
import javax.inject.Inject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.io.Resource;
import org.springframework.stereotype.Service;

import kr.or.ddit.buyer.dao.BuyerDAO;
import kr.or.ddit.common.enumpkg.ServiceResult;
import kr.or.ddit.vo.BuyerVO;

@Service
public class BuyerServiceImpl implements BuyerService {
	
	@Value("#{appInfo.buyerImages}")
	private String buyerImagesUrl;
	@Value("#{appInfo.buyerImages}")
	private Resource buyerImages;
	
	private File saveFolder;
	
	@PostConstruct
	public void init() throws IOException {
		saveFolder = buyerImages.getFile();
	}
	
	@Inject
	private BuyerDAO dao;
	
	@Override
	public BuyerVO retrieveBuyer(String buyerId) {
		BuyerVO buyer = null;
		
		buyer = dao.selectBuyer(buyerId);
		if(buyer == null) {
			// 추후 수정 예정
			throw new RuntimeException();
		}
		return buyer;
	}

	@Override
	public ServiceResult createBuyer(BuyerVO buyer) {
		ServiceResult result = null;
		
		int rowcnt = dao.insertBuyer(buyer);
		
		if(rowcnt > 0) {
			result = ServiceResult.OK;
		}else {
			result = ServiceResult.FAIL;
		}
		
		return result;
	}
	
	private void saveFile(BuyerVO buyer) {
		try {
			buyer.saveFile(saveFolder);
		} catch (IllegalStateException | IOException e) {
			throw new RuntimeException(e);
		}
		
	}
	
	
}
