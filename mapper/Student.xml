<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.actor.student.dao.StudentDAO">
<resultMap type="LectureVO" id="lecture" autoMapping="true">
	<association property="professorVO" autoMapping="true"></association>
	<association property="subjectVO" autoMapping="true"></association>
</resultMap>
<resultMap type="ClassVO" id="class" autoMapping="true">
	<association property="lectureVO" javaType="LectureVO" autoMapping="true" >
		<association property="professorVO" javaType="ProfessorVO" autoMapping="true" ></association>
		<association property="subjectVO" javaType="SubjectVO" autoMapping="true"></association>
	</association>
</resultMap>
	<select id="selectStudent" parameterType="String" resultType="StudentVO">
		SELECT
			STD_NO
			, STD_NAME
			, STD_ID
			, STD_TELNO
			, STD_ADD
			, PRO_CD
		FROM
			STUDENT
		WHERE
			STD_NO = #{stdNo}
	</select>
	<select id="selectLecutreList" parameterType="String" resultMap="lecture">
	WITH LECTUREVIEW AS(
	    SELECT
		    lec_cd
		    , PRO_CD
		    , LECTURE.SUB_CD
		    , LEC_TIME
		    , LEC_ROOM
		    , LEC_PERSON
		    , LEC_WEEK
		    , SUB_NAME
		    , SUB_GRADE
	    FROM LECTURE INNER JOIN SUBJECT ON (LECTURE.SUB_CD = SUBJECT.SUB_CD)
		)
		SELECT
		    LEC_CD
		    , LECTUREVIEW.PRO_CD
		    , SUB_GRADE
		    , SUB_NAME
		    , PRO_NAME
		    , LEC_ROOM
		    , LEC_PERSON
		    , (SELECT COUNT(*) FROM CLASS WHERE LECTUREVIEW.LEC_CD = CLASS.LEC_CD) CURR_PERSON
		    , LEC_WEEK
		    , LEC_TIME
		FROM
		    LECTUREVIEW INNER JOIN PROFESSOR ON (LECTUREVIEW.PRO_CD = PROFESSOR.PRO_CD)
		WHERE
		    LEC_CD NOT IN (SELECT LEC_CD FROM CLASS WHERE STD_NO = #{stdNo})
	</select>
	<select id="selectMyLecutreList" parameterType="String" resultMap="lecture">
		WITH LECTUREVIEW AS(
	    SELECT
		    lec_cd
		    , PRO_CD
		    , LECTURE.SUB_CD
		    , LEC_TIME
		    , LEC_ROOM
		    , LEC_PERSON
		    , LEC_WEEK
		    , SUB_NAME
		    , SUB_GRADE
		    
	    FROM LECTURE INNER JOIN SUBJECT ON (LECTURE.SUB_CD = SUBJECT.SUB_CD)
		)
		SELECT
		    LEC_CD
		    , LECTUREVIEW.PRO_CD
		    , SUB_GRADE
		    , SUB_NAME
		    , PRO_NAME
		    , LEC_ROOM
		    , LEC_PERSON
		    , (SELECT COUNT(*) FROM CLASS WHERE LECTUREVIEW.LEC_CD = CLASS.LEC_CD) CURR_PERSON
		    , LEC_WEEK
		    , LEC_TIME
		    , CASE 
              WHEN LEC_WEEK = '1' THEN '월'
              WHEN LEC_WEEK = '2' THEN '화'
              WHEN LEC_WEEK = '3' THEN '수'
              WHEN LEC_WEEK = '4' THEN '목'
              WHEN LEC_WEEK = '5' THEN '금'
              WHEN LEC_WEEK = '6' THEN '토'
              ELSE '일'
          END AS WEEKS
		FROM
		    LECTUREVIEW INNER JOIN PROFESSOR ON (LECTUREVIEW.PRO_CD = PROFESSOR.PRO_CD)
		WHERE
		    LEC_CD IN (SELECT LEC_CD FROM CLASS WHERE STD_NO = #{stdNo})
	</select>
	<delete id="deleteClass" parameterType="ClassVO">
		DELETE FROM CLASS
		WHERE STD_NO = #{stdNo} AND LEC_CD = #{lecCd}
	</delete>
	<select id="selectLecture" parameterType="String" resultMap="lecture" >
		WITH LECTUREVIEW AS(
	    SELECT
		    lec_cd
		    , PRO_CD
		    , LECTURE.SUB_CD
		    , LEC_TIME
		    , LEC_ROOM
		    , LEC_PERSON
		    , LEC_WEEK
		    , SUB_NAME
		    , SUB_GRADE
	    FROM LECTURE INNER JOIN SUBJECT ON (LECTURE.SUB_CD = SUBJECT.SUB_CD)
		)
		SELECT
		    LEC_CD
		    , LECTUREVIEW.PRO_CD
		    , SUB_GRADE
		    , SUB_NAME
		    , PRO_NAME
		    , LEC_ROOM
		    , LEC_PERSON
		    , (SELECT COUNT(*) FROM CLASS WHERE LECTUREVIEW.LEC_CD = CLASS.LEC_CD) CURR_PERSON
		    , LEC_WEEK
		    , LEC_TIME
		FROM
		    LECTUREVIEW INNER JOIN PROFESSOR ON (LECTUREVIEW.PRO_CD = PROFESSOR.PRO_CD)
		WHERE
			LEC_CD = #{lecCd}
	</select>
	<select id="selectClass" parameterType="ClassVO" resultType="int">
		SELECT
			COUNT(*)
		FROM
			CLASS
		WHERE
			LEC_CD = #{lecCd}
		AND
			STD_NO = #{stdNo}
	</select>
	<select id="selectClassLimit" parameterType="String" resultType="int">
		SELECT
			LEC_PERSON
		FROM
			LECTURE
		WHERE
			LEC_CD = #{lecCD}
	</select>
	<select id="selectClassCurrent" parameterType="String" resultType="int">
		SELECT
			COUNT(*)
		FROM
			CLASS
		WHERE
			LEC_CD = #{lecCd}
	</select>
	<insert id="insertClass" parameterType="ClassVO">
		INSERT INTO CLASS
			(STD_NO, LEC_CD, CLS_SCORE)
		VALUES(
		#{stdNo}
		, #{lecCd}
		, NULL
		)
	</insert>
	
	<select id="selectScore" parameterType="String" resultMap="class">
		WITH LECTUREINFO AS(
    	SELECT SUBJECT.SUB_NAME, PROFESSOR.PRO_NAME, SUBJECT.SUB_GRADE, LECTURE.LEC_CD
   		FROM LECTURE INNER JOIN SUBJECT ON(LECTURE.SUB_CD = SUBJECT.SUB_CD)
        			 INNER JOIN PROFESSOR ON (LECTURE.PRO_CD = PROFESSOR.PRO_CD)
		)
		SELECT SUB_NAME,SUB_GRADE, PRO_NAME, NVL(CLS_SCORE,0) CLS_SCORE
		FROM CLASS LEFT OUTER JOIN LECTUREINFO ON(LECTUREINFO.LEC_CD = CLASS.LEC_CD)
		WHERE
  		STD_NO = #{stdNo}
	</select>
	
	
	
	
	
</mapper>